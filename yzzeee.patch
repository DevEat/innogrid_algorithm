diff --git a/README.md b/README.md
index 53a6e0c..0b2936e 100644
--- a/README.md
+++ b/README.md
@@ -19,3 +19,13 @@ Silver V : Started at 2020.01.24.
 11723 집합 - 비트 마스크<br>
 2563 색종이 - 구현<br>
 1436 영화감독 숌 - 탐색<br>
+
+---
+
+2747 피보나치 수
+1463 1로 만들기
+11726 2 _ N 타일링
+11727 2 _ N 타일링2
+15990 1, 2, 3 더하기
+11052 카드 구매하기1
+16194 카드 구매하기2
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Tileing.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Tileing.java"
deleted file mode 100644
index ceb7b5c..0000000
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Tileing.java"	
+++ /dev/null
@@ -1,35 +0,0 @@
-
-import java.io.*;
-
-public class Tileing {
-
-    public static void main(String[] args) throws IOException {
-
-        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
-        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
-
-        int n = Integer.parseInt(br.readLine());
-        // 1 <= n <= 1,000
-
-        int[] memo = new int[1001];
-
-        memo[1] = 1;
-        // 기저 사례 1. 크기가 2 x 1 인 직사각형을 타일로 채우는 방법은 1가지 뿐이다
-        memo[2] = 3;
-        // 기저 사례 2. 크기가 2 x 1 인 직사각형을 타일로 채우는 방법이 3가지다.
-        // 1 x 2 두개 놓거나 2 x 1 두개 놓거나 2 x 2 하나 놓거나
-        // 즉 마지막에 좌우로 2칸짜리 블록을 놓을 수 있는 방법이 두가지다
-
-        for (int i = 3; i <= n; i++) {
-            memo[i] = memo[i - 1] + (2 * memo[i - 2]);
-            // 위의 기저 사례를 바탕으로 하나씩 쌓아나가고
-            memo[i] %= 10007;
-            // 나머지 연산 + 저장
-        }
-
-        bw.write(String.valueOf(memo[n]));
-        bw.flush();
-
-    }
-
-}
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\2012_11727.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\2012_11727.java"
new file mode 100644
index 0000000..2d505ed
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\2012_11727.java"	
@@ -0,0 +1,31 @@
+import java.util.Scanner;
+
+/**
+ * https://www.acmicpc.net/problem/11727
+ */
+public class 이xN타일링2_11727 {
+    static int[] memo;
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        int n = sc.nextInt();
+
+        memo = new int[n + 1];
+
+        System.out.println(dp(n));
+    }
+
+    public static int dp(int n) {
+        if (n <= 1) {
+            return 1;
+        }
+
+        if (memo[n] == 0) {
+            memo[n] = 2 * dp(n - 2) + dp(n - 1);
+        }
+
+        return memo[n] % 10007;
+    }
+}
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\201_11726.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\201_11726.java"
new file mode 100644
index 0000000..136ce4b
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\264xN\355\203\200\354\235\274\353\247\201_11726.java"	
@@ -0,0 +1,32 @@
+import java.util.Scanner;
+
+/**
+ * https://www.acmicpc.net/problem/11726
+ * 
+ */
+public class 이xN타일링_11726 {
+    static int[] memo;
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        int n = sc.nextInt();
+
+        memo = new int[n + 1];
+
+        System.out.println(dp(n));
+    }
+
+    public static int dp(int n) {
+        if (n <= 1) {
+            return 1;
+        }
+
+        if (memo[n] == 0) {
+            memo[n] = dp(n - 2) + dp(n - 1);
+        }
+
+        return memo[n] % 10007;
+    }
+}
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_01.java"
similarity index 95%
rename from "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne.java"
rename to "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_01.java"
index bbc003b..f0b4ff3 100644
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne.java"	
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_01.java"	
@@ -3,7 +3,7 @@ import java.util.Scanner;
 /**
  * Bottom-up 1로 만들기
  */
-public class MakeNtoOne {
+public class 일로만들기_1463_01 {
     static int[] d;
 
     public static void main(String[] args) {
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne2.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_02.java"
similarity index 94%
rename from "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne2.java"
rename to "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_02.java"
index cabf865..4a98a17 100644
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/MakeNtoOne2.java"	
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\353\241\234\353\247\214\353\223\244\352\270\260_1463_02.java"	
@@ -3,7 +3,7 @@ import java.util.Scanner;
 /**
  * Top-down 1로 만들기
  */
-public class MakeNtoOne2 {
+public class 일로만들기_1463_02 {
     public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
 
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek15990.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\2605_15990.java"
similarity index 92%
rename from "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek15990.java"
rename to "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\2605_15990.java"
index 799fb2f..2760156 100644
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek15990.java"	
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\2605_15990.java"	
@@ -4,7 +4,7 @@ import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.OutputStreamWriter;
 
-public class Baek15990 {
+public class 일이삼더하기5_15990 {
 
     BufferedReader br;
     BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
@@ -31,6 +31,6 @@ public class Baek15990 {
     }
 
     public static void main(String[] args) throws IOException {
-        new Baek15990().Solve();
+        new 일이삼더하기5_15990().Solve();
     }
 }
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_01.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_01.java"
new file mode 100644
index 0000000..3f51c77
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_01.java"	
@@ -0,0 +1,40 @@
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
+public class 일이삼더하기_9095_01 {
+    static int D[] = new int[11];
+
+    // D[n] = D[n-1] + D[n-2] + D[n-3];
+    void Solve() throws NumberFormatException, IOException {
+        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
+        StringBuilder sb = new StringBuilder();
+
+        int T = Integer.parseInt(br.readLine());
+
+        for (int i = 0; i < T; i++) {
+
+            int n = Integer.parseInt(br.readLine());
+
+            sb.append(dp(n) + "\n");
+        }
+        System.out.println(sb.toString());
+    }
+
+    static int dp(int n) {
+
+        D[0] = 1;
+        D[1] = 1;
+        D[2] = 2;
+
+        if (n < 3) {
+            return D[n];
+        } else {
+            return dp(n - 1) + dp(n - 2) + dp(n - 3);
+        }
+    }
+
+    public static void main(String[] args) throws NumberFormatException, IOException {
+        new 일이삼더하기_9095_01().Solve();
+    }
+}
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_02.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_02.java"
new file mode 100644
index 0000000..0fec7f0
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\235\274\354\235\264\354\202\274\353\215\224\355\225\230\352\270\260_9095_02.java"	
@@ -0,0 +1,36 @@
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+
+public class 일이삼더하기_9095_02 {
+
+    BufferedReader br;
+    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
+    int[] dp = new int[12];// 경우의 수 배열
+
+    void Solve() throws IOException {
+        br = new BufferedReader(new InputStreamReader(System.in));
+        int N = Integer.parseInt(br.readLine().trim());
+        StringBuffer sb = new StringBuffer();
+        dp[0] = 0;
+        dp[1] = 1;// 숫자 1 경우의 수
+        dp[2] = 2;// 숫자 2 경우의 수
+        dp[3] = 4;// 숫자 3 경우의 수
+        for (int i = 4; i <= dp.length - 1; i++) {
+            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
+        }
+
+        while (N-- > 0) {
+            int num = Integer.parseInt(br.readLine().trim());
+            sb.append(dp[num] + "\n");
+        }
+        br.close();
+        System.out.println(sb);
+    }
+
+    public static void main(String[] args) throws IOException {
+        new 일이삼더하기_9095_02().Solve();
+    }
+}
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek11052.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2601_11052.java"
similarity index 86%
rename from "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek11052.java"
rename to "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2601_11052.java"
index 2f454c6..875dbfd 100644
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek11052.java"	
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2601_11052.java"	
@@ -1,8 +1,4 @@
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
 import java.util.Scanner;
-import java.util.StringTokenizer;
 
 /**
  * baek11052 카드 구매하기1 184ms
@@ -12,7 +8,7 @@ import java.util.StringTokenizer;
  *
  * 출력 카드 N개를 갖기 위해 지불해야 하는 금액의 최댓값을 출력
  */
-public class Baek11052 {
+public class 카드구매하기1_11052 {
     public static int compare(int a, int b) {
         return a > b ? a : b;
     }
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek16194.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2602_16194.java"
similarity index 95%
rename from "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek16194.java"
rename to "\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2602_16194.java"
index c0325cf..9602060 100644
--- "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/Baek16194.java"	
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\354\271\264\353\223\234\352\265\254\353\247\244\355\225\230\352\270\2602_16194.java"	
@@ -8,7 +8,7 @@ import java.util.Scanner;
  *
  * 출력 카드 N개를 갖기 위해 지불해야 하는 금액의 최솟값을 출력
  */
-public class Baek16194 {
+public class 카드구매하기2_16194 {
 
     public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_01.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_01.java"
new file mode 100644
index 0000000..9c32621
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_01.java"	
@@ -0,0 +1,25 @@
+import java.util.Scanner;
+
+/**
+ * https://www.acmicpc.net/problem/2747
+ * 
+ * 시간 초과
+ */
+public class 피보나치수_2747_01 {
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        int n = sc.nextInt();
+
+        System.out.println(fibonacci(n));
+    }
+
+    public static int fibonacci(int n) {
+        if (n <= 1) {
+            return n;
+        }
+        return fibonacci(n - 2) + fibonacci(n - 1);
+    }
+}
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_02.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_02.java"
new file mode 100644
index 0000000..10d3c61
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_02.java"	
@@ -0,0 +1,29 @@
+import java.util.Scanner;
+
+/**
+ * https://www.acmicpc.net/problem/2747
+ */
+public class 피보나치수_2747_02 {
+    static int memo[];
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        int n = sc.nextInt();
+
+        memo = new int[n + 1];
+
+        System.out.println(fibonacci(n));
+    }
+
+    public static int fibonacci(int n) {
+        if (n <= 1) {
+            return n;
+        }
+        if (memo[n] == 0) {
+            memo[n] = fibonacci(n - 2) + fibonacci(n - 1);
+        }
+        return memo[n];
+    }
+}
\ No newline at end of file
diff --git "a/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_03.java" "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_03.java"
new file mode 100644
index 0000000..46b91d1
--- /dev/null
+++ "b/\353\213\244\354\235\264\353\202\230\353\257\271 \355\224\204\353\241\234\352\267\270\353\236\230\353\260\2151 \352\260\225\354\235\230/\355\224\274\353\263\264\353\202\230\354\271\230\354\210\230_2747_03.java"	
@@ -0,0 +1,26 @@
+import java.util.Scanner;
+
+/**
+ * https://www.acmicpc.net/problem/2747
+ */
+public class 피보나치수_2747_03 {
+    static int d[];
+
+    public static void main(String[] args) {
+
+        Scanner sc = new Scanner(System.in);
+
+        int n = sc.nextInt();
+
+        sc.close();
+
+        d = new int[n + 1];
+        d[0] = 0;
+        d[1] = 1;
+        for (int i = 2; i <= n; i++) {
+            d[i] = d[i - 1] + d[i - 2];
+        }
+        System.out.println(d[n]);
+
+    }
+}
\ No newline at end of file
